name: CI/CD Pipeline

on:
  push: # Trigger cho build trên tất cả các nhánh và auto-deploy từ main
    branches-ignore:
      - 'gh-pages' # Ví dụ: bỏ qua nhánh này nếu có

jobs:
  build_and_push:
    # Không cần if ở đây, sẽ chạy trên mọi push (ngoại trừ branches-ignore)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert owner to lowercase
        run: echo "OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/caroaiapp:${{ github.sha }} # Image được tag bằng SHA của commit

  deploy:
    needs: build_and_push 
    runs-on: ubuntu-latest
    environment: production 
    # Chỉ deploy tự động khi push lên nhánh main
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to DigitalOcean Droplet (Main Branch)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_DROPLET_HOST }}
          username: root 
          password: ${{ secrets.DO_DROPLET_PASSWORD }} 
          port: ${{ secrets.DO_SSH_PORT || 22 }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            IMAGE_SHA="${{ github.sha }}" # Luôn lấy SHA từ commit hiện tại của main
            IMAGE_NAME="ghcr.io/${OWNER_LOWERCASE}/caroaiapp:${IMAGE_SHA}"
            CONTAINER_NAME="caro-ai-server-container"

            echo "Auto-deploying image for main branch: $IMAGE_NAME"

            docker pull $IMAGE_NAME

            if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
                docker stop $CONTAINER_NAME
            fi
            if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
                docker rm $CONTAINER_NAME
            fi

            docker run -d --restart always \
              -p 127.0.0.1:8080:8080 \
              --name $CONTAINER_NAME \
              -e ASPNETCORE_ENVIRONMENT=Production \
              -e ASPNETCORE_URLS="http://+:8080" \
              -e ConnectionStrings__DefaultConnection='${{ secrets.DB_CONNECTION_STRING }}' \
              -e AppSettings__ApiKey='${{ secrets.API_KEY }}' \
              $IMAGE_NAME

# Example: How to access these in appsettings.json or Program.cs
# In appsettings.json, you can reference environment variables:
# {
#   "ConnectionStrings": {
#     "DefaultConnection": "${ConnectionStrings__DefaultConnection}"
#   },
#   "AppSettings": {
#     "ApiKey": "${AppSettings__ApiKey}"
#    }
# }
# Or in Program.cs:
# builder.Configuration.AddEnvironmentVariables();
# var apiKey = builder.Configuration["AppSettings:ApiKey"]; 