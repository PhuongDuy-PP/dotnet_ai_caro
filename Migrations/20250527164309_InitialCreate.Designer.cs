// <auto-generated />
using System;
using CaroAIServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaroAIServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250527164309_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaroAIServer.Data.MoveRecommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MoveCol")
                        .HasColumnType("int")
                        .HasColumnName("move_col");

                    b.Property<int>("MoveRank")
                        .HasColumnType("int")
                        .HasColumnName("move_rank");

                    b.Property<int>("MoveRow")
                        .HasColumnType("int")
                        .HasColumnName("move_row");

                    b.Property<float>("MoveScore")
                        .HasColumnType("real")
                        .HasColumnName("move_score");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("position_id");

                    b.Property<string>("Reasoning")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reasoning");

                    b.Property<string>("ThreatLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("threat_level");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("move_recommendations");
                });

            modelBuilder.Entity("CaroAIServer.Data.OpeningPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BestMoves")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("best_moves");

                    b.Property<string>("BoardState")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("board_state");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<float>("EvaluationScore")
                        .HasColumnType("real")
                        .HasColumnName("evaluation_score");

                    b.Property<int>("FrequencyPlayed")
                        .HasColumnType("int")
                        .HasColumnName("frequency_played");

                    b.Property<string>("GamePhase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("game_phase");

                    b.Property<int>("MoveNumber")
                        .HasColumnType("int")
                        .HasColumnName("move_number");

                    b.Property<string>("PositionHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("position_hash");

                    b.Property<float>("WinRate")
                        .HasColumnType("real")
                        .HasColumnName("win_rate");

                    b.HasKey("Id");

                    b.ToTable("opening_positions");
                });

            modelBuilder.Entity("CaroAIServer.Data.MoveRecommendation", b =>
                {
                    b.HasOne("CaroAIServer.Data.OpeningPosition", "OpeningPosition")
                        .WithMany("MoveRecommendations")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpeningPosition");
                });

            modelBuilder.Entity("CaroAIServer.Data.OpeningPosition", b =>
                {
                    b.Navigation("MoveRecommendations");
                });
#pragma warning restore 612, 618
        }
    }
}
